    Old function for inorder traversal set of assignments
    # def syntax_tree_from_props(self, assignments):
    #     formula, variable_names = self.minimal_formula(assignments)
    #
    #     n = len(variable_names)
    #     sympy_vars = {name: i for i, name in enumerate(variable_names)}
    #     one_hot_length = n + 3  # Variables + AND, OR, NOT
    #
    #     # Outputs
    #     X = []  # Node features
    #     edge_index = [[], []]  # Edges (directed)
    #
    #     # Helper function for inorder traversal
    #     def inorder(node):
    #         nonlocal one_hot_length
    #         nonlocal sympy_vars
    #         nonlocal X, edge_index
    #
    #         if node.is_Atom:  # Leaf node (variable)
    #             var_index = sympy_vars[str(node)]  # Get the index of the variable
    #             one_hot = [0] * one_hot_length
    #             one_hot[var_index] = 1
    #             current_index = len(X)
    #             X.append(one_hot)  # Add node feature
    #
    #         else:  # Operator node
    #             if node.func == Or:
    #                 op_index = n + 1
    #             elif node.func == Not:
    #                 op_index = n + 2
    #             elif node.func == And:
    #                 op_index = n
    #             else:
    #                 raise ValueError("Only [And, Or, Not] are acceptable operators")
    #
    #             one_hot = [0] * one_hot_length
    #             one_hot[op_index] = 1
    #             current_index = len(X)
    #             X.append(one_hot)  # Add node feature
    #
    #             # Add edges from children
    #             for arg in node.args:
    #                 child_index = inorder(arg)
    #                 edge_index[0].append(child_index)  # From child (arg node)
    #                 edge_index[1].append(current_index)  # To parent (current node)
    #
    #         # Return the index of the current node in X
    #         return current_index
    #
    #     # Perform inorder traversal starting from the root
    #     inorder(formula)
    #
    #     return X, edge_index